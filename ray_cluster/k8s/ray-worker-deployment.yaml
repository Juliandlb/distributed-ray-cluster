apiVersion: apps/v1
kind: Deployment
metadata:
  name: ray-worker
  namespace: ray-cluster
  labels:
    app: ray-worker
    node-type: worker
spec:
  replicas: 1  # Start with 1, can be scaled later
  selector:
    matchLabels:
      app: ray-worker
  template:
    metadata:
      labels:
        app: ray-worker
        node-type: worker
    spec:
      containers:
      - name: ray-worker
        image: ray-cluster-worker:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: RAY_HEAD_ADDRESS
          # Use internal service for same-cluster communication
          value: "ray-head-service.ray-cluster.svc.cluster.local:6379"
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: RAY_DISABLE_DEDUP
          value: "1"
        - name: RAY_DISABLE_CUSTOM_LOGGER
          value: "1"
        - name: PYTHONUNBUFFERED
          value: "1"
        volumeMounts:
        - name: ray-config
          mountPath: /app/config
        - name: ray-models
          mountPath: /app/models
        - name: ray-temp
          mountPath: /tmp/ray
        resources:
          requests:
            memory: "2Gi"
            cpu: "2"
          limits:
            memory: "4Gi"
            cpu: "4"
        livenessProbe:
          exec:
            command: ["/app/health_check.sh"]
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          exec:
            command: ["/app/health_check.sh"]
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: ray-config
        configMap:
          name: ray-config
      - name: ray-models
        persistentVolumeClaim:
          claimName: ray-models-pvc
      - name: ray-temp
        emptyDir: {}
      # Optional: Node affinity for specific worker nodes
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: node-role.kubernetes.io/worker
      #           operator: In
      #           values:
      #           - "true" 